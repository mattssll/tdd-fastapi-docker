versions pytest-6.2.5, py-1.11.0, python-3.10.1.final.0
cwd=/usr/src/app
args=('--debug',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0xffff94b779d0>
    pytest_plugin_registered [hook]
        plugin: <Session app exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0xffff94b779d0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0xffff936e2500>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0xffff936e26b0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_configure [hook]
          config: <_pytest.config.Config object at 0xffff94b779d0>
      finish pytest_configure --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0xffff936e27a0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0xffff95166320>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0xffff94b779d0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/usr/local/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/usr/local/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/usr/local/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/usr/local/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/usr/local/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/usr/local/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/usr/local/lib/python3.10/site-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/usr/src/app/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0xffff936e2500>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0xffff936e26b0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0xffff936e27a0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0xffff934e7fa0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0xffff934e7490>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0xffff95166320>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0xffff94b779d0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/usr/local/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/usr/local/lib/python3.10/site-packages/_pytest/main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/usr/local/lib/python3.10/site-packages/_pytest/runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python3.10/site-packages/_pytest/fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/usr/local/lib/python3.10/site-packages/_pytest/python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python3.10/site-packages/_pytest/terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python3.10/site-packages/_pytest/debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python3.10/site-packages/_pytest/unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/usr/local/lib/python3.10/site-packages/_pytest/capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python3.10/site-packages/_pytest/skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python3.10/site-packages/_pytest/recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python3.10/site-packages/_pytest/pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/usr/local/lib/python3.10/site-packages/_pytest/nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python3.10/site-packages/_pytest/junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python3.10/site-packages/_pytest/doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/usr/local/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python3.10/site-packages/_pytest/setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python3.10/site-packages/_pytest/setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/usr/local/lib/python3.10/site-packages/_pytest/stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python3.10/site-packages/_pytest/warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/usr/local/lib/python3.10/site-packages/_pytest/logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/usr/local/lib/python3.10/site-packages/_pytest/reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/usr/local/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/usr/local/lib/python3.10/site-packages/_pytest/threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/usr/local/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/usr/local/lib/python3.10/site-packages/anyio/pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='UTF-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/usr/src/app/tests/conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0xffff936e2500>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0xffff936e26b0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0xffff936e27a0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0xffff934e7fa0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0xffff934e7490>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0xffff934e69e0>
          manager: <_pytest.config.PytestPluginManager object at 0xffff95166320>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0xffff94b779d0>
          startdir: /usr/src/app
      finish pytest_report_header --> [['rootdir: /usr/src/app', 'plugins: anyio-3.6.1'], ['using: pytest-6.2.5 pylib-1.11.0', 'setuptools registered plugins:', '  anyio-3.6.1 at /usr/local/lib/python3.10/site-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/usr/src/app'] [collection]
        pytest_collectstart [hook]
            collector: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (local('/usr/src/app'), []) [collection]
            pytest_ignore_collect [hook]
                path: /usr/src/app/__init__.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/__init__.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/__init__.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package app> [hook]
            finish pytest_collect_file --> [<Package app>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/__init__.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/__init__.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/__init__.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package app> [hook]
            finish pytest_collect_file --> [<Package app>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/.pytest_cache
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
          early skip of rewriting module: py._code [assertion]
          early skip of rewriting module: py._code.code [assertion]
          early skip of rewriting module: repr [assertion]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app/__init__.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/app/__init__.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/app/__init__.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package app> [hook]
            finish pytest_collect_file --> [<Package app>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app/api
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app/api/__init__.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/app/api/__init__.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/app/api/__init__.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package api> [hook]
            finish pytest_collect_file --> [<Package api>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app/models
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/app/models/__init__.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/app/models/__init__.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/app/models/__init__.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package models> [hook]
            finish pytest_collect_file --> [<Package models>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/db
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/db/Dockerfile
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/db/Dockerfile
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/db/create.sql
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/db/create.sql
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/migrations
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/migrations/models
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/migrations/models/0_20220608034814_init.sql
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/migrations/models/0_20220608034814_init.sql
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/tests
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/tests/conftest.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/tests/conftest.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/tests/test_ping.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/tests/test_ping.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/tests/test_ping.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module tests/test_ping.py> [hook]
            finish pytest_collect_file --> [<Module tests/test_ping.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/tests/test_summaries.py
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: /usr/src/app/tests/test_summaries.py
                parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /usr/src/app/tests/test_summaries.py
                  parent: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module tests/test_summaries.py> [hook]
            finish pytest_collect_file --> [<Module tests/test_summaries.py>] [hook]
            pytest_ignore_collect [hook]
                path: /usr/src/app/tests/.pytest_cache
                config: <_pytest.config.Config object at 0xffff94b779d0>
            finish pytest_ignore_collect --> None [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=6 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package app> [collection]
      pytest_collectstart [hook]
          collector: <Package app>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package app>
        pytest_ignore_collect [hook]
            path: /usr/src/app/.dockerignore
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/.dockerignore
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/Dockerfile
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/Dockerfile
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/entrypoint.sh
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/entrypoint.sh
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/pyproject.toml
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/pyproject.toml
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/pytestdebug.log
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/pytestdebug.log
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/requirements.txt
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/requirements.txt
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/.pytest_cache
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/__init__.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/models
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/db
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/db/Dockerfile
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/db/create.sql
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/migrations
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/migrations/models
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/migrations/models/0_20220608034814_init.sql
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/tests
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/tests/conftest.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/tests/test_ping.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/tests/test_summaries.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/tests/.pytest_cache
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport '__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport '__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package app> [collection]
      pytest_collectstart [hook]
          collector: <Package app>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package app>
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/config.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/config.py
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/db.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/db.py
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/main.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/main.py
            parent: <Package app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api/__init__.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/models
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/models/__init__.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package api> [collection]
      pytest_collectstart [hook]
          collector: <Package api>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package api>
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api/crud.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/api/crud.py
            parent: <Package api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api/ping.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/api/ping.py
            parent: <Package api>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/api/summaries.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/api/summaries.py
            parent: <Package api>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/api/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/api/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package models> [collection]
      pytest_collectstart [hook]
          collector: <Package models>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package models>
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/models/pydantic.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/models/pydantic.py
            parent: <Package models>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: /usr/src/app/app/models/tortoise.py
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: /usr/src/app/app/models/tortoise.py
            parent: <Package models>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/models/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/models/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/test_ping.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/test_ping.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/test_ping.py>
      find_module called for: test_ping [assertion]
      matched test file '/usr/src/app/tests/test_ping.py' [assertion]
      found cached rewritten pyc for /usr/src/app/tests/test_ping.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_ping.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_ping.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_ping.py>
            name: main
            obj: <module 'app.main' from '/usr/src/app/app/main.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_ping.py>
            name: test_ping
            obj: <function test_ping at 0xffff933a6d40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0xffff936e1450>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_ping>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_ping.py>
            name: __annotations__
            obj: <attribute '__annotations__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_ping.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_ping> [collection]
      pytest_itemcollected [hook]
          item: <Function test_ping>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_ping.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module tests/test_summaries.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/test_summaries.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/test_summaries.py>
      find_module called for: test_summaries [assertion]
      matched test file '/usr/src/app/tests/test_summaries.py' [assertion]
      rewriting PosixPath('/usr/src/app/tests/test_summaries.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: json
            obj: <module 'json' from '/usr/local/lib/python3.10/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: pytest
            obj: <module 'pytest' from '/usr/local/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: test_post_summary
            obj: <function test_post_summary at 0xffff933a6ef0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0xffff94216110>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_summary>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: test_post_summaries_invalid_json
            obj: <function test_post_summaries_invalid_json at 0xffff933a6f80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0xffff94215780>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_summaries_invalid_json>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: test_get_summary
            obj: <function test_get_summary at 0xffff933a7010>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0xffff94216e90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_summary>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module tests/test_summaries.py>
            name: __annotations__
            obj: <attribute '__annotations__' of 'module' objects>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_summaries.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function test_post_summary> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_summary>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_summaries_invalid_json> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_summaries_invalid_json>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_summary> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_summary>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_summaries.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0xffff94b779d0>
          items: [<Function test_ping>, <Function test_post_summary>, <Function test_post_summaries_invalid_json>, <Function test_get_summary>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0xffff94b779d0>
            startdir: /usr/src/app
            items: [<Function test_ping>, <Function test_post_summary>, <Function test_post_summaries_invalid_json>, <Function test_get_summary>]
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session app exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=4>
      pytest_runtest_protocol [hook]
          item: <Function test_ping>
          nextitem: <Function test_post_summary>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_ping.py::test_ping
            location: ('../../../Users/mateus.silvaleao/PycharmProjects/fastapi-tdd-docker/project/tests/test_ping.py', 5, 'test_ping')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_ping>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_app' scope='module' baseid='tests'>
              request: <SubRequest 'test_app' for <Function test_ping>>
          matched marked file 'anyio._backends' (from 'anyio') [assertion]
          find_module called for: anyio._backends [assertion]
          rewriting PosixPath('/usr/local/lib/python3.10/site-packages/anyio/_backends/__init__.py') [assertion]
          matched marked file 'anyio._backends._asyncio' (from 'anyio') [assertion]
          find_module called for: anyio._backends._asyncio [assertion]
          rewriting PosixPath('/usr/local/lib/python3.10/site-packages/anyio/_backends/_asyncio.py') [assertion]
          finish pytest_fixture_setup --> <starlette.testclient.TestClient object at 0xffff936e1450> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ping>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_ping.py::test_ping' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_ping.py::test_ping' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_ping.py::test_ping' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_ping>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_ping>
          early skip of rewriting module: netrc [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ping>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_ping.py::test_ping' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_ping.py::test_ping' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_ping.py::test_ping' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_ping>
            nextitem: <Function test_post_summary>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_app' scope='module' baseid='tests'>
              request: <SubRequest 'test_app' for <Function test_ping>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_ping>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_ping.py::test_ping' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_ping.py::test_ping' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_ping.py::test_ping' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_ping.py::test_ping
            location: ('../../../Users/mateus.silvaleao/PycharmProjects/fastapi-tdd-docker/project/tests/test_ping.py', 5, 'test_ping')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_post_summary>
          nextitem: <Function test_post_summaries_invalid_json>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_summaries.py::test_post_summary
            location: ('tests/test_summaries.py', 8, 'test_post_summary')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_post_summary>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_app_with_db' scope='module' baseid='tests'>
              request: <SubRequest 'test_app_with_db' for <Function test_post_summary>>
          early skip of rewriting module: tortoise.backends.asyncpg [assertion]
          early skip of rewriting module: tortoise.backends.asyncpg.client [assertion]
          early skip of rewriting module: asyncpg [assertion]
          early skip of rewriting module: asyncpg.connection [assertion]
          early skip of rewriting module: asyncpg.compat [assertion]
          early skip of rewriting module: asyncpg.connect_utils [assertion]
          early skip of rewriting module: getpass [assertion]
          early skip of rewriting module: termios [assertion]
          early skip of rewriting module: asyncpg.exceptions [assertion]
          early skip of rewriting module: asyncpg.exceptions._base [assertion]
          early skip of rewriting module: asyncpg.protocol [assertion]
          early skip of rewriting module: asyncpg.protocol.protocol [assertion]
          early skip of rewriting module: asyncpg.pgproto [assertion]
          early skip of rewriting module: asyncpg.pgproto.pgproto [assertion]
          early skip of rewriting module: asyncpg.pgproto.types [assertion]
          early skip of rewriting module: backports_abc [assertion]
          early skip of rewriting module: asyncpg.types [assertion]
          early skip of rewriting module: secrets [assertion]
          early skip of rewriting module: asyncpg.cursor [assertion]
          early skip of rewriting module: asyncpg.connresource [assertion]
          early skip of rewriting module: asyncpg.introspection [assertion]
          early skip of rewriting module: asyncpg.prepared_stmt [assertion]
          early skip of rewriting module: asyncpg.serverversion [assertion]
          early skip of rewriting module: asyncpg.transaction [assertion]
          early skip of rewriting module: asyncpg.utils [assertion]
          early skip of rewriting module: asyncpg.pool [assertion]
          early skip of rewriting module: asyncpg._version [assertion]
          early skip of rewriting module: tortoise.backends.asyncpg.executor [assertion]
          early skip of rewriting module: tortoise.contrib.postgres [assertion]
          early skip of rewriting module: tortoise.contrib.postgres.json_functions [assertion]
          early skip of rewriting module: tortoise.contrib.postgres.search [assertion]
          early skip of rewriting module: tortoise.contrib.postgres.functions [assertion]
          early skip of rewriting module: tortoise.backends.asyncpg.schema_generator [assertion]
          early skip of rewriting module: tortoise.converters [assertion]
          finish pytest_fixture_setup --> <starlette.testclient.TestClient object at 0xffff936e10f0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summary>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summary' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summary' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summary' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_post_summary>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_post_summary>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summary>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summary' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summary' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summary' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_post_summary>
            nextitem: <Function test_post_summaries_invalid_json>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summary>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summary' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summary' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summary' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_summaries.py::test_post_summary
            location: ('tests/test_summaries.py', 8, 'test_post_summary')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_post_summaries_invalid_json>
          nextitem: <Function test_get_summary>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_summaries.py::test_post_summaries_invalid_json
            location: ('tests/test_summaries.py', 14, 'test_post_summaries_invalid_json')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_post_summaries_invalid_json>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='test_app' scope='module' baseid='tests'>
              request: <SubRequest 'test_app' for <Function test_post_summaries_invalid_json>>
          finish pytest_fixture_setup --> <starlette.testclient.TestClient object at 0xffff929d49d0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summaries_invalid_json>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_post_summaries_invalid_json>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_post_summaries_invalid_json>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summaries_invalid_json>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_post_summaries_invalid_json>
            nextitem: <Function test_get_summary>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_summaries_invalid_json>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_post_summaries_invalid_json' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_summaries.py::test_post_summaries_invalid_json
            location: ('tests/test_summaries.py', 14, 'test_post_summaries_invalid_json')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_summary>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_summaries.py::test_get_summary
            location: ('tests/test_summaries.py', 28, 'test_get_summary')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_summary>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_summary>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_get_summary' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_get_summary' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_get_summary' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_summary>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_summary>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0xffff94b779d0>
                op: ==
                left: 404
                right: 200
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_summary>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 404 == 200\n +  where 404 = <Response [404]>.status_code') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_get_summary' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_get_summary' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_get_summary' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_get_summary>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert 404 == 200\n +  where 404 = <Response [404]>.status_code') tblen=1>>
            report: <TestReport 'tests/test_summaries.py::test_get_summary' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_summary>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_app_with_db' scope='module' baseid='tests'>
              request: <SubRequest 'test_app_with_db' for <Function test_get_summary>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_app' scope='module' baseid='tests'>
              request: <SubRequest 'test_app' for <Function test_post_summaries_invalid_json>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='test_app_with_db' scope='module' baseid='tests'>
              request: <SubRequest 'test_app_with_db' for <Function test_post_summary>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_summary>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_summaries.py::test_get_summary' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_summaries.py::test_get_summary' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_summaries.py::test_get_summary' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0xffff94b779d0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_summaries.py::test_get_summary
            location: ('tests/test_summaries.py', 28, 'test_get_summary')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session app exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=4>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0xffff934e7fa0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0xffff94b779d0>
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_summaries.py::test_get_summary' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0xffff94b779d0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0xffff94b779d0>
    finish pytest_unconfigure --> [] [hook]
